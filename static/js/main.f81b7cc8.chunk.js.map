{"version":3,"sources":["recipe.js","footer.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","props","time","Card","className","style","width","height","Img","src","image","Body","Row","Title","title","Badge","dishtype","cuisinetype","Text","DropdownButton","id","drop","ingredients","map","ingredient","Dropdown","Item","text","Col","yield","toString","substring","calories","OverlayTrigger","overlay","Tooltip","Button","href","url","Footer","Date","getFullYear","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","Navbar","bg","variant","Brand","alt","Nav","Link","pointerEvents","active","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","recipe","label","dishType","totalTime","cuisineType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f81b7cc8.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { OverlayTrigger, Tooltip, Row, Col, Dropdown, DropdownButton, Badge, Card, Button } from 'react-bootstrap';\r\nimport { MdSchedule, MdPerson, MdWhatshot } from \"react-icons/md\";\r\nconst Recipe = (props) => {\r\n  var time = props.time;\r\n  if (props.time === 0) {\r\n    time = \"N/A\";\r\n  }\r\n  return (\r\n    <Card className=\"mt-3\" style={{ width: '18rem', height: '41rem' }}>\r\n      <Card.Img src={props.image} />\r\n      <Card.Body>\r\n        <Row>\r\n          <Card.Title>{props.title}</Card.Title>\r\n        </Row>\r\n        <Row>\r\n          <span>\r\n            <Badge className=\"subtitle\">{props.dishtype}</Badge>\r\n            <Badge className=\"subtitle2\">{props.cuisinetype}</Badge>\r\n          </span>\r\n        </Row>\r\n        <Card.Text>\r\n          <DropdownButton className=\"mt-3 noimg\" key=\"right\" id=\"dropdown-button-drop-right\" title=\"Ingredients\" drop=\"right\">\r\n            {props.ingredients.map(ingredient => (\r\n              <Dropdown.Item>{ingredient.text}</Dropdown.Item>\r\n            ))}\r\n          </DropdownButton>\r\n          <Row className=\"mt-4\">\r\n            <Col>\r\n              <div className=\"info\">\r\n                <p><MdPerson /></p>\r\n                <h5>Yield </h5>\r\n                <p>{props.yield.toString().substring(0, 3)}</p>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"info\">\r\n                <p><MdWhatshot /></p>\r\n                <h5>Calories </h5>\r\n                <p> {props.calories.toString().substring(0, 6)}</p>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"info\">\r\n                <p><MdSchedule /></p>\r\n                <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Time in minutes</Tooltip>}>\r\n                  <span className=\"d-inline-block\">\r\n                    <h5>Time </h5>\r\n                  </span>\r\n                </OverlayTrigger>\r\n\r\n                <p> {time}</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Card.Text>\r\n      </Card.Body>\r\n      <Button className=\"btn\"><a className=\"tag\" href={props.url}>Read More</a></Button>\r\n    </Card>\r\n\r\n  );\r\n}\r\nexport default Recipe;","import React from \"react\";\r\nimport './App.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<div className=\"foot\">\r\n\t\t\t<Row>\r\n\t\t\t\t<h5 className=\"foot-title\">Recipie is a react based Web-App for searching recipes.</h5>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<h4 className=\"copyr\"><span className=\"lighter\"> &copy; {new Date().getFullYear()} Copyright:</span> recipie.com</h4>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Footer;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Recipe from './recipe';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Footer from './footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction App() {\n  const APP_ID = '9c53ef61';\n  const APP_KEY = '9adc5007ea55118eb3d99890a1d2dd9e';\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" variant=\"light\" className=\"justify-content-between\">\n        <Navbar.Brand>\n          <img\n            alt=\"\"\n            src=\"https://uxrecipe.github.io/img/uxrecipe-logo.png\"\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          />{' '}\n          Recipie\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link>Home</Nav.Link>\n          <Nav.Link style={{ pointerEvents: 'none' }} active>Search </Nav.Link>\n          <Nav.Link>About</Nav.Link>\n          <Nav.Link>Case Study</Nav.Link>\n        </Nav>\n      </Navbar>\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" placeholder=\"Happy Searching...\" value={search} onChange={updateSearch} />\n        <button className=\"search-button\" type=\"submit\">Search</button>\n      </form>\n      <div className=\"recipes\">\n        {recipes.map(recipe => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            dishtype={recipe.recipe.dishType}\n            url={recipe.recipe.url}\n            yield={recipe.recipe.yield}\n            time={recipe.recipe.totalTime}\n            cuisinetype={recipe.recipe.cuisineType}\n\n          />\n        ))}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}