{"version":3,"sources":["footer.js","recipe.js","SearchHeader.js","SearchNav.js","search.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Row","Date","getFullYear","Recipe","props","time","Card","style","width","height","Img","src","image","Body","Title","title","Badge","variant","dishtype","cuisinetype","Text","DropdownButton","id","drop","ingredients","map","ingredient","Dropdown","Item","text","Col","yield","toString","substring","calories","OverlayTrigger","overlay","Tooltip","Button","target","href","url","SearchHeader","backgroundImage","Container","SearchNavbar","React","useState","navbarColor","setNavbarColor","useEffect","updateNavbarColor","document","documentElement","scrollTop","body","window","addEventListener","removeEventListener","Navbar","classnames","collapseOnSelect","expand","Brand","data-placement","Search","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","a","fetch","response","json","data","hits","SearchNav","onSubmit","e","preventDefault","type","placeholder","value","onChange","recipe","label","dishType","totalTime","cuisineType","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7bc8b114.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport { Row } from 'react-bootstrap';\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<div className=\"foot\">\r\n\t\t\t<Row>\r\n\t\t\t\t<h5 className=\"foot-title\">Recipie is a react based Web-App for searching recipes.</h5>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<h4 className=\"copyr\"><span className=\"lighter\"> &copy; {new Date().getFullYear()} Copyright:</span> recipie.com</h4>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Footer;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { OverlayTrigger, Tooltip, Row, Col, Dropdown, DropdownButton, Badge, Card, Button } from 'react-bootstrap';\r\nimport { MdSchedule, MdPerson, MdWhatshot } from \"react-icons/md\";\r\nconst Recipe = (props) => {\r\n  var time = props.time;\r\n  if (props.time === 0) {\r\n    time = \"N/A\";\r\n  }\r\n  return (\r\n    <Card className=\"mt-3\" style={{ width: '18rem', height: '41rem' }}>\r\n      <Card.Img src={props.image} />\r\n      <Card.Body>\r\n        <Row>\r\n          <Card.Title>{props.title}</Card.Title>\r\n        </Row>\r\n        <Row>\r\n          <span>\r\n            <Badge variant=\"secondary\" className=\"subtitle\">{props.dishtype}</Badge>\r\n            <Badge variant=\"success\" className=\"subtitle2\">{props.cuisinetype}</Badge>\r\n          </span>\r\n        </Row>\r\n        <Card.Text>\r\n          <DropdownButton className=\"mt-3 noimg\" key=\"right\" id=\"dropdown-button-drop-right\" title=\"Ingredients\" drop=\"right\">\r\n            {props.ingredients.map(ingredient => (\r\n              <Dropdown.Item >{ingredient.text}</Dropdown.Item>\r\n            ))}\r\n          </DropdownButton>\r\n          <Row className=\"mt-4\">\r\n            <Col>\r\n              <div className=\"info\">\r\n                <p><MdPerson /></p>\r\n                <h5>Yield </h5>\r\n                <p>{props.yield.toString().substring(0, 3)}</p>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"info\">\r\n                <p><MdWhatshot /></p>\r\n                <h5>Calories </h5>\r\n                <p> {props.calories.toString().substring(0, 6)}</p>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"info\">\r\n                <p><MdSchedule /></p>\r\n                <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Time in minutes</Tooltip>}>\r\n                  <span className=\"d-inline-block\">\r\n                    <h5>Time </h5>\r\n                  </span>\r\n                </OverlayTrigger>\r\n\r\n                <p> {time}</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Card.Text>\r\n      </Card.Body>\r\n      <Button className=\"btn\" target=\"_blank\" href={props.url}>Read More</Button>\r\n    </Card>\r\n\r\n  );\r\n}\r\nexport default Recipe;","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport { Container } from 'react-bootstrap';\r\n\r\n// core components\r\n\r\nfunction SearchHeader() {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"page-header section-dark\"\r\n        style={{\r\n          backgroundImage:\r\n            \"url(https://images.pexels.com/photos/6287486/pexels-photo-6287486.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500)\",\r\n        }}\r\n      >\r\n        <div className=\"filter\" />\r\n        <div className=\"content-center\">\r\n          <Container>\r\n            <div className=\"title-brand\">\r\n              <h1 className=\"presentation-title\">Recipie React</h1>\r\n            </div>\r\n            <h2 className=\"presentation-subtitle text-center\">\r\n              Make your recipes quick and easily!\r\n            </h2>\r\n          </Container>\r\n        </div>\r\n        <h6 className=\"category category-absolute\">\r\n          Designed and coded by{\" \"}\r\n          <a className=\"tag\"\r\n            href=\"https://aboutmain.gatsbyjs.io/\"\r\n            target=\"_blank\"\r\n          >\r\n           Parth Pradhan\r\n          </a>\r\n        </h6>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchHeader;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classnames from \"classnames\";\r\nimport { FaLinkedinIn,FaInstagram,FaBehance,FaGithub } from \"react-icons/fa\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavDropdown,\r\n  Container,\r\n  Collapse,\r\n  Button\r\n} from 'react-bootstrap';\r\nfunction SearchNavbar() {\r\n  const [navbarColor, setNavbarColor] = React.useState(\"navbar-transparent\");\r\n  const [navbarCollapse, setNavbarCollapse] = React.useState(false);\r\n\r\n  const toggleNavbarCollapse = () => {\r\n    setNavbarCollapse(!navbarCollapse);\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const updateNavbarColor = () => {\r\n      if (\r\n        document.documentElement.scrollTop > 299 ||\r\n        document.body.scrollTop > 299\r\n      ) {\r\n        setNavbarColor(\"\");\r\n      } else if (\r\n        document.documentElement.scrollTop < 300 ||\r\n        document.body.scrollTop < 300\r\n      ) {\r\n        setNavbarColor(\"navbar-transparent\");\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", updateNavbarColor);\r\n\r\n    return function cleanup() {\r\n      window.removeEventListener(\"scroll\", updateNavbarColor);\r\n    };\r\n  });\r\n  return (\r\n    <Navbar className={classnames(\"fixed-top\", navbarColor)} collapseOnSelect expand=\"lg\">\r\n      <Container>\r\n        <div className=\"navbar-translate\">\r\n          <Navbar.Brand\r\n            data-placement=\"bottom\"\r\n            href=\"/home\"\r\n            target=\"_blank\"\r\n            title=\"Parth Pradhan\"\r\n          >\r\n          Recipie React\r\n          </Navbar.Brand>\r\n        </div>\r\n      </Container>\r\n    </Navbar>\r\n   \r\n   \r\n  );\r\n}\r\n\r\nexport default SearchNavbar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Recipe from './recipe';\r\nimport SearchHeader from './SearchHeader';\r\nimport SearchNavbar from './SearchNav';\r\nfunction Search() {\r\n  const APP_ID = '9c53ef61';\r\n  const APP_KEY = '9adc5007ea55118eb3d99890a1d2dd9e';\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [query, setQuery] = useState('');\r\n  useEffect(() => {\r\n    getRecipes();\r\n  }, [query]);\r\n  const getRecipes = async () => {\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n\r\n    const data = await response.json();\r\n    setRecipes(data.hits);\r\n  };\r\n  const updateSearch = e => {\r\n    setSearch(e.target.value);\r\n  }\r\n  const getSearch = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch('');\r\n  }\r\n  return (\r\n    <>\r\n      <SearchNavbar/>\r\n      <SearchHeader/>\r\n      <form onSubmit={getSearch} className=\"search-form\">\r\n        <input className=\"search-bar\" type=\"text\" placeholder=\"Happy Searching...\" value={search} onChange={updateSearch} />\r\n        <button className=\"search-button\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className=\"recipes\">\r\n        {recipes.map(recipe => (\r\n          <Recipe\r\n            key={recipe.recipe.label}\r\n            title={recipe.recipe.label}\r\n            calories={recipe.recipe.calories}\r\n            image={recipe.recipe.image}\r\n            ingredients={recipe.recipe.ingredients}\r\n            dishtype={recipe.recipe.dishType}\r\n            url={recipe.recipe.url}\r\n            yield={recipe.recipe.yield}\r\n            time={recipe.recipe.totalTime}\r\n            cuisinetype={recipe.recipe.cuisineType}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\nimport './App.css';\nimport Footer from './footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Search from './search';\n\nfunction App() {\n\n  return (\n      <div className=\"App\">\n       <Search />\n       <Footer />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}